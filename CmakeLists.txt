cmake_minimum_required (VERSION 3.11)
project (opengl_test)

#opengl_test cmakelists.txt for sdl project
set(RES_DIR ./res/default)

if(UNIX AND NOT APPLE)
    #linux
    set(OUT_DIR ./build/linux/)
    set(OS_RES_DIR ./res/linux)
    file(MAKE_DIRECTORY ${OUT_DIR})
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${OUT_DIR})
    add_executable(opengl_test main.cpp glad.c shader.cpp stb_image.cpp)
    
    target_include_directories(opengl_test PUBLIC ./include)
    target_link_libraries(opengl_test -lSDL2main -lSDL2 -lfreetype)
    target_link_libraries(opengl_test -lglfw3 -lGL -lX11 -lpthread -lXrandr -lXi -ldl)
    
endif()

if(WIN32)
    #windows
    set(OUT_DIR ./build/win32/)
    set(OS_RES_DIR ./res/win32)
    file(MAKE_DIRECTORY ${OUT_DIR})
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${OUT_DIR})
    add_executable(opengl_test main.cpp glad.c shader.cpp stb_image.cpp)
    
    target_include_directories(opengl_test PUBLIC ../../libraries/include)
    target_include_directories(opengl_test PUBLIC ./include)
    target_link_libraries(opengl_test -L../../libraries/lib)
    target_link_libraries(opengl_test -w -Wl,-subsystem,windows)
    target_link_libraries(opengl_test -lmingw32 -lSDL2main -lSDL2 -lfreetype)

    configure_file(${OS_RES_DIR}/SDL2.dll ${OUT_DIR} COPYONLY)
    configure_file(${OS_RES_DIR}/freetype.dll ${OUT_DIR} COPYONLY)
endif()

#all platforms
    
configure_file(${RES_DIR}/shader2d.frag ${OUT_DIR} COPYONLY)
configure_file(${RES_DIR}/shader2d.vert ${OUT_DIR} COPYONLY)
configure_file(${RES_DIR}/shadow.frag ${OUT_DIR} COPYONLY)
configure_file(${RES_DIR}/shadow.vert ${OUT_DIR} COPYONLY)
configure_file(${RES_DIR}/text.vert ${OUT_DIR} COPYONLY)
configure_file(${RES_DIR}/text.frag ${OUT_DIR} COPYONLY)
configure_file(${RES_DIR}/wall.jpg ${OUT_DIR} COPYONLY)
configure_file(${RES_DIR}/fog.png ${OUT_DIR} COPYONLY)
configure_file(${RES_DIR}/SourceSansPro-Regular.ttf ${OUT_DIR} COPYONLY)

#add_library(opengl_test library.c)
#file(MAKE_DIRECTORY ${OUT_DIR}/directory)
#configure_file(path/to/file.txt ${OUT_DIR} COPYONLY)